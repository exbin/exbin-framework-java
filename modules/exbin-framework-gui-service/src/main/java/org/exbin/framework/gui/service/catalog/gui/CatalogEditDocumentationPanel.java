/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.gui.service.catalog.gui;

import com.lightdev.app.shtm.DefaultTextResources;
import com.lightdev.app.shtm.SHTMLPanel;
import com.lightdev.app.shtm.SHTMLPanelImpl;
import com.lightdev.app.shtm.TextResources;
import com.lightdev.app.shtm.Util;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Locale;
import java.util.Properties;
import java.util.ResourceBundle;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * XBManager catalog specification selection panel.
 *
 * @version 0.2.1 2019/06/28
 * @author ExBin Project (http://exbin.org)
 */
public class CatalogEditDocumentationPanel extends javax.swing.JPanel {

    private String documentation;
    private final SHTMLPanel mainPanel;
    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(CatalogEditDocumentationPanel.class);

    public CatalogEditDocumentationPanel() {
        mainPanel = SHTMLPanel.createSHTMLPanel();
        initComponents();
        init();
    }

    private void init() {
        SHTMLPanelImpl.setTextResources(createResources());
        SHTMLPanel.getResources();
        mainPanel.setOpenHyperlinkHandler((ActionEvent e) -> {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI(e.getActionCommand());
                    desktop.browse(uri);
                } catch (IOException | URISyntaxException ex) {
                    Util.errMsg((Component) e.getSource(), ex.getMessage(), ex);
                }
            }
        });

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }

    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new CatalogEditDocumentationPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public String getDocumentation() {
        return documentation;
    }

    public void setDocumentation(String documentation) {
        this.documentation = documentation;
        mainPanel.setCurrentDocumentContent(documentation);
    }

    private static TextResources createResources() {
        try {
            final String propsLoc = "org/exbin/framework/gui/service/resources/SimplyHTML.properties";
            final URL defaultPropsURL = ClassLoader.getSystemResource(propsLoc);
            final Properties props = new Properties();
            try (InputStream in = defaultPropsURL.openStream()) {
                props.load(in);
            }
            final ResourceBundle resourceBundle = ResourceBundle.getBundle(
                    "com.lightdev.app.shtm.resources.SimplyHTML", Locale.getDefault());
            return new DefaultTextResources(resourceBundle, props);
        } catch (final IOException ex) {
            Util.errMsg(null, "resources not found", ex);
            return null;
        }
    }
}
