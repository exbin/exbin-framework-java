/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.gui.service.catalog.gui;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import static javax.xml.catalog.CatalogManager.catalog;
import org.exbin.framework.api.XBApplication;
import org.exbin.framework.gui.frame.api.GuiFrameModuleApi;
import org.exbin.framework.gui.menu.api.MenuManagement;
import org.exbin.framework.gui.utils.WindowUtils;
import org.exbin.framework.gui.utils.gui.DefaultControlPanel;
import org.exbin.framework.gui.utils.handler.DefaultControlHandler;
import org.exbin.xbup.catalog.XBECatalog;
import org.exbin.xbup.core.catalog.XBACatalog;
import org.exbin.xbup.core.catalog.base.XBCNode;

/**
 * Catalog item plugin panel.
 *
 * @version 0.2.0 2020/07/22
 * @author ExBin Project (http://exbin.org)
 */
public class CatalogItemEditPluginsPanel extends javax.swing.JPanel {

    private final CatalogPluginsTableModel pluginsModel;
    private XBApplication application;
    private MenuManagement menuManagement;
    private XBCNode node;
    private XBACatalog catalog;

    public CatalogItemEditPluginsPanel() {
        pluginsModel = new CatalogPluginsTableModel();

        initComponents();

        table.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting()) {
                boolean itemSelected = table.getSelectedRow() >= 0;
                editMenuItem.setEnabled(itemSelected);
            }
        });
    }

    public void setApplication(XBApplication application) {
        this.application = application;
    }

    public void setCatalog(XBACatalog catalog) {
        this.catalog = catalog;
        pluginsModel.setCatalog(catalog);
    }

    public void setNode(XBCNode node) {
        this.node = node;
        pluginsModel.setNode(node);
    }

    public void setMenuManagement(MenuManagement menuManagement) {
        this.menuManagement = menuManagement;
        menuManagement.insertMainPopupMenu(pluginPopupMenu, 3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pluginPopupMenu = new javax.swing.JPopupMenu();
        addMenuItem = new javax.swing.JMenuItem();
        editMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        addMenuItem.setText("Add...");
        addMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuItemActionPerformed(evt);
            }
        });
        pluginPopupMenu.add(addMenuItem);

        editMenuItem.setText("Edit...");
        editMenuItem.setEnabled(false);
        editMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuItemActionPerformed(evt);
            }
        });
        pluginPopupMenu.add(editMenuItem);
        pluginPopupMenu.add(jSeparator1);

        setLayout(new java.awt.BorderLayout());

        scrollPane.setComponentPopupMenu(pluginPopupMenu);

        table.setModel(pluginsModel);
        table.setComponentPopupMenu(pluginPopupMenu);
        scrollPane.setViewportView(table);

        add(scrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void addMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuItemActionPerformed
        GuiFrameModuleApi frameModule = application.getModuleRepository().getModuleByInterface(GuiFrameModuleApi.class);
        CatalogEditNodePluginPanel editPanel = new CatalogEditNodePluginPanel();
//        editPanel.setApplication(application);
//        editPanel.setMenuManagement(menuManagement);
//        editPanel.setCatalog(catalog);
//        editPanel.setCatalogItem(currentItem);

        DefaultControlPanel controlPanel = new DefaultControlPanel();
        JPanel dialogPanel = WindowUtils.createDialogPanel(editPanel, controlPanel);
        final WindowUtils.DialogWrapper dialog = frameModule.createDialog(dialogPanel);
//        WindowUtils.addHeaderPanel(dialog.getWindow(), editPanel.getClass(), editPanel.getResourceBundle());
        controlPanel.setHandler((DefaultControlHandler.ControlActionType actionType) -> {
            if (actionType == DefaultControlHandler.ControlActionType.OK) {
//                EntityManager em = ((XBECatalog) catalog).getEntityManager();
//                EntityTransaction transaction = em.getTransaction();
//                transaction.begin();
//                editPanel.persist();
//                setItem(currentItem);
//                em.flush();
//                transaction.commit();
//                specsModel.setNode(specsModel.getNode());
//                selectSpecTableRow(currentItem);
            }
            dialog.close();
        });
        dialog.showCentered(this);
        dialog.dispose();
    }//GEN-LAST:event_addMenuItemActionPerformed

    private void editMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editMenuItemActionPerformed

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new CatalogItemEditPluginsPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addMenuItem;
    private javax.swing.JMenuItem editMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu pluginPopupMenu;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
