/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.about.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.datatransfer.StringSelection;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.Properties;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.JComponent;
import javax.swing.JPopupMenu;
import javax.swing.event.HyperlinkEvent;
import javax.swing.table.DefaultTableModel;
import org.exbin.framework.App;
import org.exbin.framework.about.XBApplicationBundle;
import org.exbin.framework.action.popup.DefaultPopupMenu;
import org.exbin.framework.action.popup.LinkActionsHandler;
import org.exbin.framework.utils.ClipboardUtils;
import org.exbin.framework.utils.DesktopUtils;
import org.exbin.framework.language.api.LanguageModuleApi;
import org.exbin.framework.utils.WindowUtils;
import org.exbin.framework.utils.UiUtils;

/**
 * Basic about panel.
 *
 * @author ExBin Project (https://exbin.org)
 */
@ParametersAreNonnullByDefault
public class AboutPanel extends javax.swing.JPanel {

    private ResourceBundle appBundle;
    private final ResourceBundle resourceBundle = App.getModule(LanguageModuleApi.class).getBundle(AboutPanel.class);
    private JComponent sideComponent = null;
    private boolean darkMode = false;
    private final AboutModulesPanel aboutModulesPanel = new AboutModulesPanel();
    private final AboutAuthorsPanel aboutAuthorsPanel = new AboutAuthorsPanel();
    private String appHomepageLink;

    public AboutPanel() {
        initComponents();
        init();
    }

    private void init() {
        darkMode = UiUtils.isDarkUI();
        if (darkMode) {
            aboutHeaderPanel.setBackground(Color.BLACK);
            appTitleLabel.setForeground(Color.WHITE);
            appDescLabel.setForeground(Color.WHITE);
        }

        // Fill system properties tab
        environmentTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    resourceBundle.getString("environmentTable.propertyColumn"), resourceBundle.getString("environmentTable.valueColumn")
                }
        ) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });

        Properties systemProperties = System.getProperties();
        DefaultTableModel tableModel = (DefaultTableModel) environmentTable.getModel();
        Set<java.util.Map.Entry<Object, Object>> items = systemProperties.entrySet();
        items.stream().map((entry) -> {
            Object[] line = new Object[2];
            line[0] = entry.getKey();
            line[1] = entry.getValue();
            return line;
        }).forEachOrdered((line) -> {
            tableModel.addRow(line);
        });

        productTabbedPane.insertTab(resourceBundle.getString("authorsPanel.TabConstraints.tabTitle"), null, aboutAuthorsPanel, null, 1);
        productTabbedPane.insertTab(resourceBundle.getString("modulesPanel.TabConstraints.tabTitle"), null, aboutModulesPanel, null, 3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutHeaderImagePanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        productTabbedPane = new javax.swing.JTabbedPane();
        applicationPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        versionTextField = new javax.swing.JTextField();
        javax.swing.JLabel vendorLabel = new javax.swing.JLabel();
        vendorTextField = new javax.swing.JTextField();
        javax.swing.JLabel appLicenseLabel = new javax.swing.JLabel();
        licenseTextField = new javax.swing.JTextField();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        appHomepageLabel = new javax.swing.JLabel();
        licensePanel = new javax.swing.JPanel();
        licenseScrollPane = new javax.swing.JScrollPane();
        licenseEditorPane = new javax.swing.JEditorPane();
        environmentPanel = new javax.swing.JPanel();
        environmentScrollPane = new javax.swing.JScrollPane();
        environmentTable = new javax.swing.JTable();
        aboutHeaderPanel = new javax.swing.JPanel();
        headerSeparator = new javax.swing.JSeparator();
        aboutHeaderTitlePanel = new javax.swing.JPanel();
        appDescLabel = new javax.swing.JLabel();
        appTitleLabel = new javax.swing.JLabel();

        aboutHeaderImagePanel.setOpaque(false);

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout aboutHeaderImagePanelLayout = new javax.swing.GroupLayout(aboutHeaderImagePanel);
        aboutHeaderImagePanel.setLayout(aboutHeaderImagePanelLayout);
        aboutHeaderImagePanelLayout.setHorizontalGroup(
            aboutHeaderImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutHeaderImagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
        );
        aboutHeaderImagePanelLayout.setVerticalGroup(
            aboutHeaderImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        setLayout(new java.awt.BorderLayout());

        productTabbedPane.setMinimumSize(new java.awt.Dimension(38, 15));

        applicationPanel.setAutoscrolls(true);

        nameLabel.setFont(nameLabel.getFont().deriveFont(nameLabel.getFont().getStyle() | java.awt.Font.BOLD));
        nameLabel.setText(resourceBundle.getString("nameLabel.text")); // NOI18N

        nameTextField.setEditable(false);
        nameTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        nameTextField.setBorder(null);

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD));
        versionLabel.setText(resourceBundle.getString("versionLabel.text")); // NOI18N

        versionTextField.setEditable(false);
        versionTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        versionTextField.setBorder(null);

        vendorLabel.setFont(vendorLabel.getFont().deriveFont(vendorLabel.getFont().getStyle() | java.awt.Font.BOLD));
        vendorLabel.setText(resourceBundle.getString("vendorLabel.text")); // NOI18N

        vendorTextField.setEditable(false);
        vendorTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        vendorTextField.setBorder(null);

        appLicenseLabel.setFont(appLicenseLabel.getFont().deriveFont(appLicenseLabel.getFont().getStyle() | java.awt.Font.BOLD));
        appLicenseLabel.setText(resourceBundle.getString("appLicenseLabel.text")); // NOI18N

        licenseTextField.setEditable(false);
        licenseTextField.setFont(new java.awt.Font("Dialog 12", 1, 12)); // NOI18N
        licenseTextField.setBorder(null);

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel.setText(resourceBundle.getString("homepageLabel.text")); // NOI18N

        appHomepageLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        appHomepageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appHomepageLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout applicationPanelLayout = new javax.swing.GroupLayout(applicationPanel);
        applicationPanel.setLayout(applicationPanelLayout);
        applicationPanelLayout.setHorizontalGroup(
            applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(applicationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vendorLabel)
                    .addComponent(homepageLabel)
                    .addComponent(appLicenseLabel)
                    .addComponent(versionLabel)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(vendorTextField)
                    .addComponent(licenseTextField)
                    .addComponent(appHomepageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(versionTextField))
                .addContainerGap())
        );
        applicationPanelLayout.setVerticalGroup(
            applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(applicationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
                    .addComponent(versionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorLabel)
                    .addComponent(vendorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appLicenseLabel)
                    .addComponent(licenseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(applicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel)
                    .addComponent(appHomepageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        productTabbedPane.addTab(resourceBundle.getString("applicationPanel.TabConstraints.tabTitle"), applicationPanel); // NOI18N

        licenseEditorPane.setEditable(false);
        licenseEditorPane.setContentType("text/html"); // NOI18N
        licenseScrollPane.setViewportView(licenseEditorPane);

        javax.swing.GroupLayout licensePanelLayout = new javax.swing.GroupLayout(licensePanel);
        licensePanel.setLayout(licensePanelLayout);
        licensePanelLayout.setHorizontalGroup(
            licensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(licenseScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        licensePanelLayout.setVerticalGroup(
            licensePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(licenseScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );

        productTabbedPane.addTab(resourceBundle.getString("licensePanel.TabConstraints.tabTitle"), licensePanel); // NOI18N

        environmentScrollPane.setViewportView(environmentTable);

        javax.swing.GroupLayout environmentPanelLayout = new javax.swing.GroupLayout(environmentPanel);
        environmentPanel.setLayout(environmentPanelLayout);
        environmentPanelLayout.setHorizontalGroup(
            environmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(environmentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        environmentPanelLayout.setVerticalGroup(
            environmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(environmentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );

        productTabbedPane.addTab(resourceBundle.getString("environmentPanel.TabConstraints.tabTitle"), environmentPanel); // NOI18N

        add(productTabbedPane, java.awt.BorderLayout.CENTER);

        aboutHeaderPanel.setBackground(new java.awt.Color(255, 255, 255));
        aboutHeaderPanel.setLayout(new java.awt.BorderLayout());
        aboutHeaderPanel.add(headerSeparator, java.awt.BorderLayout.SOUTH);

        aboutHeaderTitlePanel.setOpaque(false);

        appDescLabel.setForeground(java.awt.Color.black);
        appDescLabel.setText(resourceBundle.getString("appDescLabel.text")); // NOI18N

        appTitleLabel.setFont(appTitleLabel.getFont().deriveFont(appTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, appTitleLabel.getFont().getSize()+4));
        appTitleLabel.setForeground(java.awt.Color.black);
        appTitleLabel.setText(resourceBundle.getString("appTitleLabel.text")); // NOI18N

        javax.swing.GroupLayout aboutHeaderTitlePanelLayout = new javax.swing.GroupLayout(aboutHeaderTitlePanel);
        aboutHeaderTitlePanel.setLayout(aboutHeaderTitlePanelLayout);
        aboutHeaderTitlePanelLayout.setHorizontalGroup(
            aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutHeaderTitlePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(appDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(appTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        aboutHeaderTitlePanelLayout.setVerticalGroup(
            aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
            .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutHeaderTitlePanelLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(appTitleLabel)
                    .addGap(7, 7, 7)
                    .addComponent(appDescLabel)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        aboutHeaderPanel.add(aboutHeaderTitlePanel, java.awt.BorderLayout.CENTER);

        add(aboutHeaderPanel, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void appHomepageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appHomepageLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1 && !evt.isPopupTrigger()) {
            DesktopUtils.openDesktopURL(appHomepageLink);
        }
    }//GEN-LAST:event_appHomepageLabelMouseClicked

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        WindowUtils.invokeWindow(new AboutPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutHeaderImagePanel;
    private javax.swing.JPanel aboutHeaderPanel;
    private javax.swing.JPanel aboutHeaderTitlePanel;
    private javax.swing.JLabel appDescLabel;
    private javax.swing.JLabel appHomepageLabel;
    private javax.swing.JLabel appTitleLabel;
    private javax.swing.JPanel applicationPanel;
    private javax.swing.JPanel environmentPanel;
    private javax.swing.JScrollPane environmentScrollPane;
    private javax.swing.JTable environmentTable;
    private javax.swing.JSeparator headerSeparator;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JEditorPane licenseEditorPane;
    private javax.swing.JPanel licensePanel;
    private javax.swing.JScrollPane licenseScrollPane;
    private javax.swing.JTextField licenseTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTabbedPane productTabbedPane;
    private javax.swing.JTextField vendorTextField;
    private javax.swing.JTextField versionTextField;
    // End of variables declaration//GEN-END:variables

    public void setSideComponent(JComponent sideComponent) {
        if (this.sideComponent != null) {
            remove(this.sideComponent);
        }

        if (sideComponent != null) {
            add(sideComponent, BorderLayout.WEST);
            this.sideComponent = sideComponent;
        }
    }
/*
    public void setApplication(XBApplication application) {
        appBundle = application != null ? application.getAppBundle() : resourceBundle;

        aboutModulesPanel.setApplication(application);
        aboutAuthorsPanel.setApplication(application);

        // Load license
        try {
            if (appBundle.containsKey(XBApplicationBundle.APPLICATION_LICENSE_FILE)) {
                String licenseFilePath = appBundle.getString(XBApplicationBundle.APPLICATION_LICENSE_FILE);
                licenseEditorPane.setPage(getClass().getResource(licenseFilePath));
            }
            licenseEditorPane.addHyperlinkListener((HyperlinkEvent event) -> {
                if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                    DesktopUtils.openDesktopURL(event.getURL().toExternalForm());
                }
            });
        } catch (IOException ex) {
            Logger.getLogger(AboutPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        nameTextField.setText(appBundle.getString(XBApplicationBundle.APPLICATION_NAME));
        versionTextField.setText(appBundle.getString(XBApplicationBundle.APPLICATION_VERSION));
        vendorTextField.setText(appBundle.getString(XBApplicationBundle.APPLICATION_VENDOR));
        licenseTextField.setText(appBundle.getString(XBApplicationBundle.APPLICATION_LICENSE));
        appHomepageLink = appBundle.getString(XBApplicationBundle.APPLICATION_HOMEPAGE);
        appHomepageLabel.setText("<html><a href=\"\">" + appHomepageLink + "</a></html>");
        if (appBundle.containsKey(XBApplicationBundle.APPLICATION_ABOUT_IMAGE)) {
            String aboutImagePath = appBundle.getString(XBApplicationBundle.APPLICATION_ABOUT_IMAGE);
            imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(aboutImagePath)));
            aboutHeaderPanel.add(aboutHeaderImagePanel, BorderLayout.WEST);
        }
        appTitleLabel.setText(appBundle.getString(XBApplicationBundle.APPLICATION_TITLE));
        appDescLabel.setText(appBundle.getString(XBApplicationBundle.APPLICATION_DESCRIPTION));

        appHomepageLabel.setComponentPopupMenu(new JPopupMenu() {
            private boolean initialized = false;

            @Override
            public void show(Component invoker, int x, int y) {
                if (!initialized) {
                    DefaultPopupMenu.getInstance().appendLinkMenu(this, new LinkActionsHandler() {
                        @Override
                        public void performCopyLink() {
                            String targetURL = appHomepageLink;
                            StringSelection stringSelection = new StringSelection(targetURL);
                            ClipboardUtils.getClipboard().setContents(stringSelection, stringSelection);
                        }

                        @Override
                        public void performOpenLink() {
                            String targetURL = appHomepageLink;
                            DesktopUtils.openDesktopURL(targetURL);
                        }

                        @Override
                        public boolean isLinkSelected() {
                            return true;
                        }
                    });

                    initialized = true;
                }
                super.show(invoker, x, y);
            }
        });
    } */
}
