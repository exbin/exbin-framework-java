/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.bined.options.panel;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Nullable;
import org.exbin.bined.swing.extended.theme.ExtendedCodeAreaThemeProfile;
import org.exbin.framework.api.Preferences;
import org.exbin.framework.bined.preferences.ThemeParameters;
import org.exbin.framework.gui.options.api.OptionsPanel;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * Theme profiles options panel.
 *
 * @version 0.2.0 2019/06/17
 * @author ExBin Project (http://exbin.org)
 */
public class ThemeProfilesOptionsPanel extends javax.swing.JPanel implements OptionsPanel {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(ThemeProfilesOptionsPanel.class);

    private final CodeAreaOptionsPanelApi codeAreaOptionsPanelApi;
    private final ProfileSelectionPanel selectionPanel;
    private final ThemeProfilesPanel profilesPanel;

    public ThemeProfilesOptionsPanel(@Nullable CodeAreaOptionsPanelApi codeAreaOptionsPanelApi) {
        this.profilesPanel = new ThemeProfilesPanel();
        this.codeAreaOptionsPanelApi = codeAreaOptionsPanelApi;
        selectionPanel = new ProfileSelectionPanel(profilesPanel);
        initComponents();
        init();
    }

    private void init() {
        add(selectionPanel, BorderLayout.NORTH);
        add(profilesPanel, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new ThemeProfilesOptionsPanel(null));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public List<PathItem> getPath() {
        ArrayList<OptionsPanel.PathItem> path = new ArrayList<>();
        path.add(new PathItem("editor", ""));
        path.add(new PathItem("themeProfiles", resourceBundle.getString("options.Path.0")));
        return path;
    }

    @Override
    public void applyPreferencesChanges() {
        if (codeAreaOptionsPanelApi != null) {
            int defaultProfile = selectionPanel.getDefaultProfile();
            if (defaultProfile >= 0) {
                ExtendedCodeAreaThemeProfile profile = profilesPanel.getProfile(defaultProfile);
                codeAreaOptionsPanelApi.getCodeArea().setThemeProfile(profile);
            }
        }
    }

    @Override
    public void loadFromPreferences(Preferences preferences) {
        ThemeParameters parameters = new ThemeParameters(preferences);
        profilesPanel.loadFromParameters(parameters);
        selectionPanel.setDefaultProfile(parameters.getSelectedProfile());
    }

    @Override
    public void saveToPreferences(Preferences preferences) {
        ThemeParameters parameters = new ThemeParameters(preferences);
        profilesPanel.saveToParameters(parameters);
        parameters.setSelectedProfile(selectionPanel.getDefaultProfile());
    }

    @Override
    public void setModifiedOptionListener(ModifiedOptionListener listener) {

    }
}
