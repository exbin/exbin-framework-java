/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.bined.gui;

import java.io.File;
import java.util.List;
import java.util.ResourceBundle;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.DefaultComboBoxModel;
import org.exbin.auxiliary.paged_data.BinaryData;
import org.exbin.bined.swing.extended.ExtCodeArea;
import org.exbin.bined.swing.extended.diff.DiffHighlightCodeAreaPainter;
import org.exbin.framework.gui.file.api.FileHandler;
import org.exbin.framework.gui.utils.LanguageUtils;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * Compare files panel.
 *
 * @version 0.2.1 2021/10/23
 * @author ExBin Project (http://exbin.org)
 */
@ParametersAreNonnullByDefault
public class CompareFilesPanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(CompareFilesPanel.class);

    private Control control;

    public CompareFilesPanel() {
        initComponents();
        init();
    }

    private void init() {
    }

    @Nonnull
    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    public void setControl(Control control) {
        this.control = control;
    }

    public void setAvailableFiles(List<String> availableFiles) {
        DefaultComboBoxModel<String> leftComboBoxModel = new DefaultComboBoxModel<>();
        leftComboBoxModel.addElement("Load file...");
        leftComboBoxModel.addAll(availableFiles);
        leftComboBox.setModel(leftComboBoxModel);

        DefaultComboBoxModel<String> rightComboBoxModel = new DefaultComboBoxModel<>();
        rightComboBoxModel.addElement("Load file...");
        rightComboBoxModel.addAll(availableFiles);
        rightComboBox.setModel(rightComboBoxModel);
    }

    public void setLeftFile(BinaryData contentData) {
        // TODO replace with setLeftContentData once fixed
        ExtCodeArea leftCodeArea = codeAreaDiffPanel.getLeftCodeArea();
        leftCodeArea.setContentData(contentData);

        ExtCodeArea rightCodeArea = codeAreaDiffPanel.getRightCodeArea();
        ((DiffHighlightCodeAreaPainter) rightCodeArea.getPainter()).setComparedData(contentData);
    }

    public void setRightFile(BinaryData contentData) {
        ExtCodeArea rightCodeArea = codeAreaDiffPanel.getRightCodeArea();
        rightCodeArea.setContentData(contentData);

        ExtCodeArea leftCodeArea = codeAreaDiffPanel.getLeftCodeArea();
        ((DiffHighlightCodeAreaPainter) leftCodeArea.getPainter()).setComparedData(contentData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsPanel = new javax.swing.JPanel();
        leftLabel = new javax.swing.JLabel();
        leftComboBox = new javax.swing.JComboBox<>();
        leftOpenButton = new javax.swing.JButton();
        rightLabel = new javax.swing.JLabel();
        rightComboBox = new javax.swing.JComboBox<>();
        rightOpenButton = new javax.swing.JButton();
        codeAreaDiffPanel = new org.exbin.bined.swing.extended.diff.ExtCodeAreaDiffPanel();

        setLayout(new java.awt.BorderLayout());

        leftLabel.setText(resourceBundle.getString("leftLabel.text")); // NOI18N

        leftOpenButton.setText("...");
        leftOpenButton.setToolTipText(resourceBundle.getString("leftOpenButton1.toolTipText")); // NOI18N
        leftOpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftOpenButtonActionPerformed(evt);
            }
        });

        rightLabel.setText(resourceBundle.getString("rightLabel.text")); // NOI18N

        rightOpenButton.setText("...");
        rightOpenButton.setToolTipText(resourceBundle.getString("rightOpenButton.toolTipText")); // NOI18N
        rightOpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightOpenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addComponent(leftComboBox, 0, 470, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leftOpenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightComboBox, 0, 445, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightOpenButton))
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addComponent(leftLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rightLabel)))
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftLabel)
                    .addComponent(rightLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftOpenButton)
                    .addComponent(rightOpenButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(optionsPanel, java.awt.BorderLayout.PAGE_START);

        add(codeAreaDiffPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void rightOpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightOpenButtonActionPerformed
        if (control == null) {
            control.openFile();
        }
    }//GEN-LAST:event_rightOpenButtonActionPerformed

    private void leftOpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftOpenButtonActionPerformed
        if (control == null) {
            control.openFile();
        }
    }//GEN-LAST:event_leftOpenButtonActionPerformed

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new CompareFilesPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.exbin.bined.swing.extended.diff.ExtCodeAreaDiffPanel codeAreaDiffPanel;
    private javax.swing.JComboBox<String> leftComboBox;
    private javax.swing.JLabel leftLabel;
    private javax.swing.JButton leftOpenButton;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JComboBox<String> rightComboBox;
    private javax.swing.JLabel rightLabel;
    private javax.swing.JButton rightOpenButton;
    // End of variables declaration//GEN-END:variables

    public interface Control {

        @Nullable
        File openFile();

        @Nonnull
        FileHandler getFileHandler(int index);
    }
}
