/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.editor.text.gui;

import org.exbin.framework.editor.text.TextEncodingStatusApi;
import org.exbin.framework.editor.text.TextPositionStatusApi;
import org.exbin.framework.utils.LanguageUtils;
import org.exbin.framework.utils.WindowUtils;

/**
 * Text editor status panel.
 *
 * @author ExBin Project (https://exbin.org)
 */
public class TextStatusPanel extends javax.swing.JPanel implements TextPositionStatusApi, TextEncodingStatusApi {

    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(TextStatusPanel.class);

    public TextStatusPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        documentCursorPositionTextField = new javax.swing.JTextField();
        encodingLabel = new javax.swing.JLabel();
        documentEncodingTextField = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        documentCursorPositionTextField.setEditable(false);
        documentCursorPositionTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        documentCursorPositionTextField.setText("1:1"); // NOI18N
        documentCursorPositionTextField.setToolTipText(resourceBundle.getString("documentCursorPositionTextField.toolTipText")); // NOI18N
        documentCursorPositionTextField.setName("documentCursorPositionTextField"); // NOI18N

        encodingLabel.setText(resourceBundle.getString("encodingLabel.text")); // NOI18N
        encodingLabel.setName("encodingLabel"); // NOI18N

        documentEncodingTextField.setEditable(false);
        documentEncodingTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        documentEncodingTextField.setText("UTF-8"); // NOI18N
        documentEncodingTextField.setToolTipText(resourceBundle.getString("documentEncodingTextField.toolTipText")); // NOI18N
        documentEncodingTextField.setName("documentEncodingTextField"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(documentCursorPositionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 397, Short.MAX_VALUE)
                .addComponent(encodingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(documentEncodingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(documentCursorPositionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addComponent(documentEncodingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(encodingLabel))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        WindowUtils.invokeDialog(new TextStatusPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField documentCursorPositionTextField;
    private javax.swing.JTextField documentEncodingTextField;
    private javax.swing.JLabel encodingLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setTextPosition(String textPosition) {
        documentCursorPositionTextField.setText(textPosition);
    }

    @Override
    public String getEncoding() {
        return documentEncodingTextField.getText();
    }

    @Override
    public void setEncoding(String encodingName) {
        documentEncodingTextField.setText(encodingName);
    }
}
