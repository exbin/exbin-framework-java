/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.component.gui;

import org.exbin.framework.component.api.ActionsProvider;
import org.exbin.framework.component.api.toolbar.SideToolBar;
import java.awt.BorderLayout;
import javax.annotation.Nonnull;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.Action;
import javax.swing.JToolBar;
import org.exbin.framework.component.ComponentModule;
import org.exbin.framework.component.api.toolbar.EditItemActions;
import org.exbin.framework.component.api.toolbar.EditItemActionsHandler;
import org.exbin.framework.component.api.toolbar.EditItemActionsHandlerEmpty;
import org.exbin.framework.component.api.toolbar.MoveItemActions;
import org.exbin.framework.component.api.toolbar.MoveItemActionsHandler;
import org.exbin.framework.component.api.toolbar.MoveItemActionsHandlerEmpty;
import org.exbin.framework.utils.UtilsModule;
import org.exbin.framework.utils.TestApplication;
import org.exbin.framework.utils.WindowUtils;

/**
 * Panel with side toolbar.
 *
 * @author ExBin Project (https://exbin.org)
 */
@ParametersAreNonnullByDefault
public class ToolBarSidePanel extends javax.swing.JPanel implements SideToolBar {

    private JToolBar toolBar = null;
    private ToolBarPosition toolBarPosition = ToolBarPosition.LEFT;

    public ToolBarSidePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        TestApplication testApplication = UtilsModule.getDefaultAppEditor();
        ComponentModule guiComponentModule = new ComponentModule();
        testApplication.addModule(ComponentModule.MODULE_ID, guiComponentModule);

        ToolBarSidePanel toolBarSidePanel = new ToolBarSidePanel();
        MoveItemActionsHandler moveItemActionsHandler = new MoveItemActionsHandlerEmpty();
        MoveItemActions moveItemActions = guiComponentModule.createMoveItemActions(moveItemActionsHandler);
        toolBarSidePanel.addActions(moveItemActions);
        toolBarSidePanel.addSeparator();

        EditItemActionsHandler editItemActionsHandler = new EditItemActionsHandlerEmpty();
        EditItemActions editItemActions = guiComponentModule.createEditItemActions(editItemActionsHandler);
        toolBarSidePanel.addActions(editItemActions);
        WindowUtils.invokeDialog(toolBarSidePanel);
    }

    @Override
    public void addAction(Action action) {
        initToolBar();
        toolBar.add(action);
    }

    @Override
    public void addSeparator() {
        initToolBar();
        toolBar.addSeparator();
    }

    public void addActions(ActionsProvider actionsProvider) {
        actionsProvider.registerActions(this);
    }

    private void initToolBar() {
        if (toolBar == null) {
            toolBar = new JToolBar();
            toolBar.setOrientation(JToolBar.VERTICAL);
            toolBar.setFloatable(false);
            add(toolBar, toolBarPosition == ToolBarPosition.LEFT ? BorderLayout.WEST : BorderLayout.EAST);
        }
    }

    @Nonnull
    public ToolBarPosition getToolBarPosition() {
        return toolBarPosition;
    }

    public void setToolBarPosition(ToolBarPosition toolBarPosition) {
        this.toolBarPosition = toolBarPosition;
    }

    public enum ToolBarPosition {
        LEFT, RIGHT
    }
}
