/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.gui.editor.gui;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Nullable;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.JPopupMenu;
import org.exbin.framework.gui.file.api.FileHandlerApi;
import org.exbin.framework.gui.utils.WindowUtils;

/**
 * Multi editor panel.
 *
 * @version 0.2.2 2021/09/27
 * @author ExBin Project (http://exbin.org)
 */
@ParametersAreNonnullByDefault
public class MultiEditorPanel extends javax.swing.JPanel {

    private final List<FileHandlerApi> fileHandlers = new ArrayList<>();
    private Control control;

    public MultiEditorPanel() {
        initComponents();
        init();
    }

    private void init() {
        tabbedPane.addChangeListener((e) -> {
            if (control != null) {
                control.activeIndexChanged(tabbedPane.getSelectedIndex());
            }
        });
        tabbedPane.setComponentPopupMenu(new JPopupMenu() {
            @Override
            public void show(Component invoker, int x, int y) {
                int index = tabbedPane.indexOfComponent(invoker);
                if (control != null) {
                    control.showPopupMenu(index, x, y);
                }
            }
        });
    }

    public void setControl(Control control) {
        this.control = control;
    }

    public int getFileHandlersCount() {
        return fileHandlers.size();
    }

    public void addFileHandler(FileHandlerApi fileHandler, String text) {
        fileHandlers.add(fileHandler);
        tabbedPane.addTab(text, fileHandler.getComponent());
    }

    public void insertFileHandler(int position, FileHandlerApi fileHandler) {
        fileHandlers.add(position, fileHandler);
    }

    public void removeFileHandler(FileHandlerApi fileHandler) {
        int index = fileHandlers.indexOf(fileHandler);
        if (index >= 0) {
            removeFileHandlerAt(index);
        }
    }

    public void removeFileHandlerAt(int index) {
        tabbedPane.removeTabAt(index);
        fileHandlers.remove(index);
    }

    public void updateFileHandlerAt(int index, String text) {
        Component component = tabbedPane.getTabComponentAt(index);
        component.setName(text);
    }

    public int getActiveIndex() {
        return tabbedPane.getSelectedIndex();
    }

    @Nullable
    public FileHandlerApi getActiveFile() {
        if (fileHandlers.isEmpty()) {
            return null;
        }
        return fileHandlers.get(getActiveIndex());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();

        setPreferredSize(new java.awt.Dimension(400, 300));
        setLayout(new java.awt.BorderLayout());
        add(tabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new MultiEditorPanel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

    public interface Control {

        void activeIndexChanged(int index);

        void showPopupMenu(int index, int positionX, int positionY);
    }
}
