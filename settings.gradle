rootProject.name = 'exbin-framework-java'

include ":deps"

include ":modules:exbin-framework-client"
include ":modules:exbin-framework-client-api"
include ":modules:exbin-framework"
include ":modules:exbin-framework-api"
include ":modules:exbin-framework-gui-menu"
include ":modules:exbin-framework-gui-menu-api"
include ":modules:exbin-framework-gui-frame"
include ":modules:exbin-framework-gui-frame-api"
include ":modules:exbin-framework-gui-file"
include ":modules:exbin-framework-gui-file-api"
include ":modules:exbin-framework-gui-data"
include ":modules:exbin-framework-gui-data-api"
include ":modules:exbin-framework-gui-component"
include ":modules:exbin-framework-gui-component-api"
include ":modules:exbin-framework-gui-undo"
include ":modules:exbin-framework-gui-undo-api"
include ":modules:exbin-framework-gui-help"
include ":modules:exbin-framework-gui-help-api"
include ":modules:exbin-framework-gui-link"
include ":modules:exbin-framework-gui-link-api"
include ":modules:exbin-framework-gui-options"
include ":modules:exbin-framework-gui-options-api"
include ":modules:exbin-framework-gui-utils"
include ":modules:exbin-framework-gui-about"
include ":modules:exbin-framework-gui-about-api"
include ":modules:exbin-framework-gui-editor"
include ":modules:exbin-framework-gui-editor-api"
include ":modules:exbin-framework-gui-update"
include ":modules:exbin-framework-gui-update-api"
include ":modules:exbin-framework-gui-service"
include ":modules:exbin-framework-gui-docking"
include ":modules:exbin-framework-gui-docking-api"
include ":modules:exbin-framework-bined"
include ":modules:exbin-framework-editor-text"
include ":modules:exbin-framework-editor-wave"
include ":modules:exbin-framework-editor-picture"
include ":modules:exbin-framework-editor-xbup"
include ":modules:exbin-framework-service-data"
include ":modules:exbin-framework-preferences"

File placeholder = file("deps/_placeholder")
if (placeholder.exists()) {
    placeholder.delete()
}

if (!gradle.startParameter.taskNames.contains("clean") || gradle.startParameter.projectProperties.containsKey("moduleDep")) {
    File depsDir = file("deps")
    // Include all downloaded dependency modules
    depsDir.listFiles().each() { childFile ->
        if (childFile.isDirectory() && childFile != ".gradle") {
            include ':deps:' + childFile.name
        }
    }
}

